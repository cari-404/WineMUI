name: Build and Package WineHQ on Ubuntu 22.04 (i386 and amd64)

on:
  push:
    branches:
      - master

# Define variables
env:
  WINE_VERSION: "10.10"

jobs:
  build_i386:
    name: Build WineHQ (i386)
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: wine-${{ env.WINE_VERSION }}
        repository: wine-mirror/wine

    - name: Checkout the WineMUI code
      uses: actions/checkout@v3
      with:
        ref: master
        repository: cschuls/WineMUI
        path: WineMUI

    - name: Replace the file dll/kernelbase/loader.c
      run: |
        cp WineMUI/wine-devel/loader.c dlls/kernelbase/

    - name: Set up environment (i386)
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install -y build-essential libc6-dev-i386 gcc-multilib g++-multilib
        sudo apt install gcc-multilib gcc-mingw-w64 libasound2-dev libpulse-dev libdbus-1-dev libfontconfig-dev libfreetype-dev libgnutls28-dev libgl-dev libunwind-dev libx11-dev libxcomposite-dev libxcursor-dev libxfixes-dev libxi-dev libxrandr-dev libxrender-dev libxext-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libosmesa6-dev libsdl2-dev libudev-dev libvulkan-dev libcapi20-dev libcups2-dev libgphoto2-dev libsane-dev libkrb5-dev samba-dev ocl-icd-opencl-dev libpcap-dev libusb-1.0-0-dev
        sudo apt-get install -y libgl1-mesa-dev libglu1-mesa-dev
        sudo apt-get install -y devscripts
        sudo apt-get install -y p7zip-full libx11-dev:i386 libfreetype-dev:i386 libglu1-mesa-dev:i386 libjpeg-dev:i386 libxrender-dev:i386 libldap-dev:i386 libopenal-dev:i386 libudev-dev:i386  libmpg123-dev:i386 libxcursor-dev:i386 libxslt-dev:i386 libncurses5-dev:i386 libtiff-dev:i386 libgsm1-dev:i386 libv4l-dev:i386 libdbus-1-dev:i386 libosmesa6-dev:i386 libsane-dev:i386 libxinerama-dev:i386 libxrandr-dev:i386 libxxf86vm-dev:i386 liblcms2-dev:i386 libfontconfig1-dev:i386 libcapi20-dev:i386 libcups2-dev:i386 ocl-icd-opencl-dev:i386

    - name: Build WineHQ (i386)
      run: |
        ./configure
        make -j 8
        sudo make install

    - name: Package build artifacts
      run: |
        7z a winehq-${{ env.WINE_VERSION }}_i386.7z *

    - name: Package build KernelBase artifacts
      run: |
        7z a kernelbase_i386.7z dlls/kernelbase/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: winehq-${{ env.WINE_VERSION }}_i386.7z
        path: winehq-${{ env.WINE_VERSION }}_i386.7z

    - name: Upload Kernelbase artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kernelbase_i386
        path: dlls/kernelbase/

  build_amd64:
    name: Build WineHQ (amd64)
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: wine-${{ env.WINE_VERSION }}
        repository: wine-mirror/wine

    - name: Checkout the WineMUI code
      uses: actions/checkout@v3
      with:
        ref: master
        repository: cschuls/WineMUI
        path: WineMUI

    - name: Replace the file dll/kernelbase/loader.c
      run: |
        cp WineMUI/wine-devel/loader.c dlls/kernelbase/

    - name: Set up environment (amd64)
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libc6-dev-i386 gcc-multilib g++-multilib
        sudo apt install gcc-multilib gcc-mingw-w64 libasound2-dev libpulse-dev libdbus-1-dev libfontconfig-dev libfreetype-dev libgnutls28-dev libgl-dev libunwind-dev libx11-dev libxcomposite-dev libxcursor-dev libxfixes-dev libxi-dev libxrandr-dev libxrender-dev libxext-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libosmesa6-dev libsdl2-dev libudev-dev libvulkan-dev libcapi20-dev libcups2-dev libgphoto2-dev libsane-dev libkrb5-dev samba-dev ocl-icd-opencl-dev libpcap-dev libusb-1.0-0-dev
        sudo apt-get install -y libgl1-mesa-dev libglu1-mesa-dev
        sudo apt-get install -y devscripts
        sudo apt-get install -y p7zip-full

    - name: Build WineHQ (amd64)
      run: |
        ./configure --enable-win64
        make -j 8
        sudo make install

    - name: Package build artifacts
      run: |
        7z a winehq-${{ env.WINE_VERSION }}_amd64.7z *

    - name: Package build KernelBase artifacts
      run: |
        7z a kernelbase_amd64.7z dlls/kernelbase/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: winehq-${{ env.WINE_VERSION }}_amd64.7z
        path: winehq-${{ env.WINE_VERSION }}_amd64.7z
        
    - name: Upload Kernelbase artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kernelbase_amd64
        path: dlls/kernelbase/

  upload_to_release:
    name: Upload to Release
    needs: [build_i386, build_amd64]  # Menunggu kedua pekerjaan selesai
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    steps:
    - name: Download Artifact (i386)
      uses: actions/download-artifact@v4
      with:
        name: kernelbase_i386
        path: kernelbase_i386

    - name: Download Artifact (amd64)
      uses: actions/download-artifact@v4
      with:
        name: kernelbase_amd64
        path: kernelbase_amd64

    - name: Display structure of downloaded files
      run: ls -R

    - name: Package build KernelBase artifacts
      run: |
        7z a kernelbase_i386.7z kernelbase_i386

    - name: Package build KernelBase artifacts
      run: |
        7z a kernelbase_amd64.7z kernelbase_amd64

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.WINE_VERSION }}
        release_name: Release version ${{ env.WINE_VERSION }}

    - name: Upload Release Artifact (i386)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./kernelbase_i386.7z
        asset_name: kernelbase_i386.7z
        asset_content_type: application/x-7z-compressed

    - name: Upload Release Artifact (amd64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./kernelbase_amd64.7z
        asset_name: kernelbase_amd64.7z
        asset_content_type: application/x-7z-compressed
